{"version":3,"file":"components/delay-hydration.js","sources":["webpack:///./node_modules/nuxt-delay-hydration/dist/runtime/components/DelayHydration.vue","webpack:///./node_modules/nuxt-delay-hydration/dist/runtime/components/DelayHydration.vue?1639","webpack:///./node_modules/nuxt-delay-hydration/dist/runtime/components/DelayHydration.vue?0614"],"sourcesContent":["\n\nimport VueLazyHydration from 'vue-lazy-hydration'\n\nexport default {\n  props: {\n    debug: {\n      type: Boolean,\n      default: false,\n    },\n    forever: {\n      type: Boolean,\n      default: false,\n    },\n    replayClick: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      triggerHydration: false,\n    }\n  },\n  async mounted() {\n    // already mounted or missing plugin api for some reason\n    if (this.triggerHydration || !this.$delayHydration)\n      return\n\n    if (typeof window === 'undefined' || !('requestIdleCallback' in window)) {\n      this.triggerHydration = true\n      return\n    }\n\n    const style = 'background: #e2f8e5; color: #2e9127;'\n    if (this.forever || this.$delayHydration.config.forever) {\n      console.info('%c[NuxtDelayHydration] Running with the \"forever\" enabled, will never hydrate.', style)\n      return\n    }\n\n    const debug = this.debug || this.$delayHydration.config.debug\n\n    try {\n      if (debug) {\n        // eslint-disable-next-line no-console\n        console.time('[NuxtDelayHydration] Hydration time')\n        console.info('%c[NuxtDelayHydration] Started delaying hydration via DelayHydration component.', style)\n      }\n      // create the hydration race\n      const hydrationEvent = await this.$delayHydration.hydrationRace()\n      if (debug) {\n        console.log(`%c[NuxtDelayHydration] Finished delaying hydration with trigger: \"${hydrationEvent}\"`, style)\n        // eslint-disable-next-line no-console\n        console.timeEnd('[NuxtDelayHydration] Hydration time')\n      }\n      if (this.$delayHydration.config.replayClick && this.replayClick)\n        this.$delayHydration.replayPointerEvent(hydrationEvent, true)\n    }\n    catch (e) {\n      console.error(e)\n    }\n    finally {\n      this.triggerHydration = true\n    }\n  },\n  render(h) {\n    return h(VueLazyHydration, {\n      props: {\n        never: true,\n        triggerHydration: this.triggerHydration,\n      },\n    }, this.$slots.default)\n  },\n}\n","import mod from \"-!../../../../babel-loader/lib/index.js??ref--2-0!../../../../@nuxt/components/dist/loader.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./DelayHydration.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../babel-loader/lib/index.js??ref--2-0!../../../../@nuxt/components/dist/loader.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./DelayHydration.vue?vue&type=script&lang=js&\"","var render, staticRenderFns\nimport script from \"./DelayHydration.vue?vue&type=script&lang=js&\"\nexport * from \"./DelayHydration.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  \"ee83595e\"\n  \n)\n\nexport default component.exports"],"mappings":";;;;;;;;;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzEA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}